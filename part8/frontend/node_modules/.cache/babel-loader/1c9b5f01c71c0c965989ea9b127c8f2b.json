{"ast":null,"code":"var _jsxFileName = \"/home/agustin/Documents/GitHub/fullstackOpen22/part8/frontend/src/components/NewBook.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_BOOK, ALL } from '../queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewBook = _ref => {\n  _s();\n\n  let {\n    show\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [published, setPublished] = useState('');\n  const [genre, setGenre] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [addBook] = useMutation(ADD_BOOK, {\n    update: (cache, response) => {\n      cache.updateQuery({\n        query: ALL\n      }, _ref2 => {\n        let {\n          allData\n        } = _ref2;\n        console.log('response: ', response);\n        return {\n          allData: allData.allBooks.concat(response.data.addBook)\n        };\n      });\n    }\n  });\n\n  const submit = async event => {\n    event.preventDefault();\n    const newBook = {\n      title,\n      published: Number(published),\n      author,\n      genres\n    };\n    addBook({\n      variables: { ...newBook\n      }\n    });\n    setTitle('');\n    setPublished('');\n    setAuthor('');\n    setGenres([]);\n    setGenre('');\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  if (!show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setTitle(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"author\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: author,\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setAuthor(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"published\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: published,\n          onChange: _ref5 => {\n            let {\n              target\n            } = _ref5;\n            return setPublished(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: genre,\n          onChange: _ref6 => {\n            let {\n              target\n            } = _ref6;\n            return setGenre(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addGenre,\n          type: \"button\",\n          children: \"add genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"genres: \", genres.join(' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"create book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewBook, \"mmDJdQvo3qq7L2TB1X2cn/cw9w4=\", false, function () {\n  return [useMutation];\n});\n\n_c = NewBook;\nexport default NewBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewBook\");","map":{"version":3,"names":["useState","useMutation","ADD_BOOK","ALL","NewBook","show","title","setTitle","author","setAuthor","published","setPublished","genre","setGenre","genres","setGenres","addBook","update","cache","response","updateQuery","query","allData","console","log","allBooks","concat","data","submit","event","preventDefault","newBook","Number","variables","addGenre","target","value","join"],"sources":["/home/agustin/Documents/GitHub/fullstackOpen22/part8/frontend/src/components/NewBook.js"],"sourcesContent":["import { useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { ADD_BOOK, ALL } from '../queries'\n\nconst NewBook = ({ show }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n\n  const [ addBook ] = useMutation(ADD_BOOK, {\n    update: (cache, response) => {\n      cache.updateQuery({query: ALL}, ({ allData }) => {\n        console.log('response: ',response)\n        return {\n          allData: allData.allBooks.concat(response.data.addBook)\n        }\n      })\n    }\n  })\n\n  const submit = async (event) => {\n    event.preventDefault()\n    const newBook = {\n      title,\n      published: Number(published),\n      author,\n      genres\n    }\n    addBook({ variables: { ...newBook } })\n\n    setTitle('')\n    setPublished('')\n    setAuthor('')\n    setGenres([])\n    setGenre('')\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre('')\n  }\n\n  if (!show) {\n    return null\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type=\"number\"\n            value={published}\n            onChange={({ target }) => setPublished(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">\n            add genre\n          </button>\n        </div>\n        <div>genres: {genres.join(' ')}</div>\n        <button type=\"submit\">create book</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}