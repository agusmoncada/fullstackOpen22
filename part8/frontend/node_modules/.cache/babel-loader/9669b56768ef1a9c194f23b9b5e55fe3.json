{"ast":null,"code":"var _jsxFileName = \"/home/agustin/Documents/GitHub/fullstackOpen22/part8/frontend/src/components/recommendations.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport { ME, ALL } from \"../queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommend = _ref => {\n  _s();\n\n  let {\n    show\n  } = _ref;\n  const {\n    data,\n    loading\n  } = useQuery(ME);\n  const response = useQuery(ALL, {\n    variables: {\n      genre: data.me.favouriteGenre\n    }\n  });\n  console.log(data, loading, 'response', response);\n\n  if (!show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"books in your favorite genre \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: data.me.favouriteGenre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recommend, \"zw6qqIk3C+LDlQo90WS0Nb5ZeXM=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = Recommend;\nexport default Recommend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommend\");","map":{"version":3,"names":["useQuery","ME","ALL","Recommend","show","data","loading","response","variables","genre","me","favouriteGenre","console","log"],"sources":["/home/agustin/Documents/GitHub/fullstackOpen22/part8/frontend/src/components/recommendations.js"],"sourcesContent":["import { useQuery } from \"@apollo/client\"\nimport { ME, ALL } from \"../queries\"\n\nconst Recommend = ({ show }) => {\n    const { data, loading } = useQuery(ME)\n    const response = useQuery(ALL, {\n        variables: {genre: data.me.favouriteGenre}\n    })\n    console.log( data, loading, 'response', response )\n    if (!show) {\n        return null\n    }\n\n    return (\n        <div>\n            <h1>recommendations</h1>\n            <p>books in your favorite genre <b>{data.me.favouriteGenre}</b></p>\n        </div>\n    )\n}\n\nexport default Recommend"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,EAAT,EAAaC,GAAb,QAAwB,YAAxB;;;AAEA,MAAMC,SAAS,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC5B,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBN,QAAQ,CAACC,EAAD,CAAlC;EACA,MAAMM,QAAQ,GAAGP,QAAQ,CAACE,GAAD,EAAM;IAC3BM,SAAS,EAAE;MAACC,KAAK,EAAEJ,IAAI,CAACK,EAAL,CAAQC;IAAhB;EADgB,CAAN,CAAzB;EAGAC,OAAO,CAACC,GAAR,CAAaR,IAAb,EAAmBC,OAAnB,EAA4B,UAA5B,EAAwCC,QAAxC;;EACA,IAAI,CAACH,IAAL,EAAW;IACP,OAAO,IAAP;EACH;;EAED,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,yDAAgC;QAAA,UAAIC,IAAI,CAACK,EAAL,CAAQC;MAAZ;QAAA;QAAA;QAAA;MAAA,QAAhC;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAhBD;;GAAMR,S;UACwBH,Q,EACTA,Q;;;KAFfG,S;AAkBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}