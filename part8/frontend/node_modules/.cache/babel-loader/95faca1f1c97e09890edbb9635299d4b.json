{"ast":null,"code":"import { gql } from \"@apollo/client\";\nexport const ALL = gql`\nquery($author: String, $genre: String) {\n  allBooks(author: $author, genre: $genre) {\n    title\n    published\n    author {\n      name\n    }\n    id\n    genres\n  }\n  allAuthors {\n    name\n    born\n    bookCount\n    id\n  }\n}\n`;\nexport const GENRES = gql`\nquery {\n  allBooks {\n    title\n    published\n    author {\n      name\n    }\n    id\n    genres\n  }\n}\n`;\nexport const ME = gql`\nquery {\n  me {\n    favouriteGenre\n  }\n}\n`;\nexport const ADD_BOOK = gql`\nmutation addBook($title: String!, $published: Int!, $author: String!, $genres: [String]) {\n  addBook(\n    title: $title\n    published: $published\n    author: $author\n    genres: $genres\n  ) {\n    title\n  }\n}\n`;\nexport const BOOK_ADDED = gql`\nsubscription {\n  bookAdded {\n    title\n    published\n    id\n    genres\n    author {\n      name\n    }\n  }\n}\n`;\nexport const EDIT_AUTHOR = gql`\nmutation editAuthor($name: String!, $setBornTo: Int) {\n  editAuthor(\n    name: $name\n    setBornTo: $setBornTo\n  ) {\n    born\n  }\n}\n`;\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)  {\n      value\n    }\n  }\n`;","map":{"version":3,"names":["gql","ALL","GENRES","ME","ADD_BOOK","BOOK_ADDED","EDIT_AUTHOR","LOGIN"],"sources":["/home/agustin/Documents/GitHub/fullstackOpen22/part8/frontend/src/queries.js"],"sourcesContent":["import { gql } from \"@apollo/client\"\n\nexport const ALL = gql`\nquery($author: String, $genre: String) {\n  allBooks(author: $author, genre: $genre) {\n    title\n    published\n    author {\n      name\n    }\n    id\n    genres\n  }\n  allAuthors {\n    name\n    born\n    bookCount\n    id\n  }\n}\n`\nexport const GENRES = gql`\nquery {\n  allBooks {\n    title\n    published\n    author {\n      name\n    }\n    id\n    genres\n  }\n}\n`\nexport const ME = gql`\nquery {\n  me {\n    favouriteGenre\n  }\n}\n`\n\nexport const ADD_BOOK = gql`\nmutation addBook($title: String!, $published: Int!, $author: String!, $genres: [String]) {\n  addBook(\n    title: $title\n    published: $published\n    author: $author\n    genres: $genres\n  ) {\n    title\n  }\n}\n`\n\nexport const BOOK_ADDED= gql`\nsubscription {\n  bookAdded {\n    title\n    published\n    id\n    genres\n    author {\n      name\n    }\n  }\n}\n`\n\nexport const EDIT_AUTHOR = gql`\nmutation editAuthor($name: String!, $setBornTo: Int) {\n  editAuthor(\n    name: $name\n    setBornTo: $setBornTo\n  ) {\n    born\n  }\n}\n`\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)  {\n      value\n    }\n  }\n`"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,GAAG,GAAGD,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAmBP,OAAO,MAAME,MAAM,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAaP,OAAO,MAAMG,EAAE,GAAGH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,CANO;AAQP,OAAO,MAAMI,QAAQ,GAAGJ,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP,OAAO,MAAMK,UAAU,GAAEL,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAcP,OAAO,MAAMM,WAAW,GAAGN,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAWP,OAAO,MAAMO,KAAK,GAAGP,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CANO"},"metadata":{},"sourceType":"module"}